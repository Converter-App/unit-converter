{"version":3,"sources":["unit-converter.js","App.js","index.js"],"names":["unit_typo","Map","property","unit","factor","Array","tempIncrement","getByValue","map","searchValue","entries","key","indexOf","searchListGlobal","firstItem","j","res","console","log","searchIn","row","length","push","searchList","word","i","match","RegExp","name","replace","toLowerCase","findIndex","includes","reorderListItems","array","Math","abs","lastIndexOf","splice","CalculateUnit","source_unit_input","source_unit_menu","target_unit_menu","sourceValue","parseFloat","isNaN","propIndex","sourceIndex","sourceFactor","targetIndex","targetFactor","result","ConvertFromTo","App","props","onChangeInput","e","setState","inputText","target","value","toString","trim","split","join","listArray","list","onClickItem","inputArray","state","toIndex","slice","pop","innerText","dataInput","current","focus","React","createRef","converted","input","this","index","first","last","style","fontSize","preventDefault","position","display","width","ref","placeholder","className","onChange","type","dataPlaceholder","onClick","clearInput","color","backgroundColor","borderRadius","padding","fontWeight","margin","borderStyle","borderWidth","borderColor","marginTop","checkMultipleResult","item","border","textAlign","textDecoration","cursor","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba577309.chunk.js","sourcesContent":["// --- JAVASCRIPT UNIT CONVERTER by CONVERTER.APP\r\n\r\n// 1) The unit[i][j] and factor[i][j] arrays should have the same j-length and their elements should correspond to each other in the j dimension; i.e. unit[0][2] should define the name and factor[0][2] the conversion factor of the SAME unit.\r\n\r\n// 2) In every property (i.e. the i-dimension of the unit and factor arrays) there should be defined a 'primary' or 'base' unit, i.e. one with a conversion factor of 1.  The definitions of the other (secondary) units should use this formula:\r\n\r\n// 1 [Secondary unit] = [Secondary unit conversion factor] [Primary Unit]\r\n//                                   ^\r\n//  This goes in the factor array ___|\r\n//\r\n//  e.g.: 1 ft = 0.3048 m\r\n\r\n// ====================================\r\n//  Global Variable & Data Definitions\r\n// ====================================\r\n\r\n\r\n// all the typo errors of the below units are find below in unit_typo map in the second array after the key\r\n// other typos could be added!\r\n let unit_typo = new Map(\r\n[\r\n //length typo\r\n[\"meter (m)\",[\"meter\",\"meters\",\"m\"]],\r\n[\"angstrom (a')\",[\"angstrom\",\"angstroms\"]],\r\n[\"astronomical unit(au)\",[\"astronomical unit\",\"au\"]],\r\n[\"caliber (cal)\",[\"caliber\",\"cal\"]],\r\n[\"centimeter (cm)\",[\"centimeter\",\"cm\"]],\r\n[\"kilometer (km)\",[\"km\",\"kilometer\"]],\r\n[\"fermi (fm)\",[\"fermi\",\"fm\"]],\r\n[\"foot (ft)\",[\"ft\",\"foot\"]],\r\n[\"inch (in)\",[\"inch\",\"inche\",\"in\"]],\r\n[\"league (int'l)\",[\"league\",\"int'l\"]],\r\n[\"league (uk)\",[\"league uk\",\"league (uk)\",\"league british\"]],\r\n[\"light year(ly)\",[\"light year\",\"ly\"]],\r\n[\"micrometer (mu-m)\",[\"micrometer\",\"mu-m\"]],\r\n[\"mile(us statute)\",[\"mile\",\"mile statute\"]],\r\n[\"mile(us nautical)\",[\"mile nautical\",\"mile us nautical\"]],\r\n[\"millimeter (mm)\", [\"millimeter\",\"mm\"]],\r\n[\"nanometer (nm)\",[\"nanometer\",\"nm\"]],\r\n[\"pica (printer)\",[\"pica\",\"printer\"]],\r\n[\"picometer (pm)\",[\"picometer\",\"pm\"]],\r\n[\"point (pt)\",[\"point\",\"pt\"]],\r\n[\"yard (yd)\",[\"yard\",\"yd\"]],\r\n//   \"mile (int'l nautical)\", \"mile (uk nautical)\", \"mile (us statute)\"\r\n\r\n\r\n//mass typo \r\n// \"hundredweight (long)\", \"hundredweight (short)\", \"pound mass (lbm)\", \"pound mass (troy)\", \"ounce mass (ozm)\", \"ounce mass (troy)\", \"slug\", \"ton (assay)\", \"ton (long)\", \"ton (short)\", \"ton (metric)\", \"tonne\"\r\n[\"gram\",[\"gram\",\"g\"]],\r\n[\"kilogram (kg)\",[\"kilogram\",\"kg\"]],\r\n[\"milligram\",[\"milligram\",\"mg\"]],\r\n[\"microgram (mu-gr)\",[\"microgram\",\"mu-gr\"]],\r\n[\"carat (metric)(ct)\",[\"carat\",\"ct\"]],\r\n[\"tonne\",[\"tonne\",\"ton\"]],\r\n[\"pound mass (lbm)\",[\"pound mass\",\"lbm\"]],\r\n[\"ounce mass (ozm)\",[\"ounce mass\",\"ozm\",\"ounce\"]],\r\n[\"hundredweight (long)\",[\"hundredweight long\",\"hundredweight\"]],\r\n\r\n//volume & capacity typo\r\n[\"liter\",[\"l\",\"liter\"]],\r\n[\"milliliter\",[\"ml\",\"milliliter\"]],\r\n\r\n//acceleration typo\r\n[\"meter/sq.sec (m/sec^2)\",[\"m/sec²\",\"m/sec^2\"]],\r\n[ \"foot/sq.sec (ft/sec^2)\",[\"ft/sec²\",\"foot/sec^2\"]],\r\n[\"galileo (gal)\",[\"gal\",\"galileo\"]],\r\n[\"inch/sq.sec (in/sec^2)\",[\"in/sec²\",\"inch/(seq.seq)\"]],\r\n\r\n//area typo\r\n[\"square meter (m^2)\",[\"m²\",\"m^2\",\"m*m\"]],\r\n[\"square centimeter\",[\"cm²\",\"cm^2\",\"cm*cm\"]],\r\n[\"square kilometer\",[\"km²\",\"km^2\",\"km*km\"]],\r\n[\"square foot\",[\"ft²\",\"ft^2\",\"ft*ft\"]],\r\n[\"square inch\",[\"in²\",\"in*in\"]],\r\n[\"square mile\",[\"mile²\",\"mi^2\",\"mi²\"]],\r\n[\"square yard\",[\"yd²\",\"yd^2\",\"yard²\",\"yard^2\"]],\r\n\r\n//torque typo\r\n[\"newton-meter\",[\"N/m\",\"newton-meter\",\"newton meter\"]],\r\n[\"dyne-centimeter(dy cm)\",[\"dy cm\",\"dy-cm\"]],\r\n[\"kgrf-meter (kgf-m)\",[\"kgf m\",\"kgf-m\",\"kgrf meter\",\"kgrf-meter\"]],\r\n[\"lbf-inch (lbf-in)\",[\"lbf in\",\"lbf-in\",\"lbf inch\",\"lbf-inch\"]],\r\n[\"lbf-foot (lbf-ft)\",[\"lbf ft\",\"lbf-ft\",\"lbf-foot\",\"lbf foot\"]],\r\n\r\n//electricity typo\r\n[\"coulomb (cb)\",[\"coulomb\",\"cb\"]],\r\n[\"abcoulomb\",[\"abcoulomb\"]],\r\n[\"ampere-hour (a-hr)\",[\"ampere hour\",\"a hr\"]],\r\n[\"faraday (f)\",[\"f\",\"faraday\"]],\r\n[\"millifaraday (mf)\",[\"millifaraday\",\"mf\"]],\r\n[\"microfaraday (mu-f)\",[\"microfaraday\",\"mu-f\",\"mu f\"]],\r\n[\"picofaraday (pf)\",[\"picofaraday\",\"pf\"]],\r\n\r\n//energy typo\r\n[\"joule (j)\",[\"joule\",\"j\"]],\r\n[\"btu (mean)\",[\"btu\",\"btu mean\"]],\r\n[\"btu (thermochemical)\",[\"btu thermochemical\"]],\r\n[\"calorie (si) (cal)\",[\"calorie\",\"cal\"]],\r\n[\"electron-volt (ev)\",[\"electron volt\",\"ev\",\"electron-volt\"]],\r\n[\"foot-pound force\",[\"foot pound force\",\"foot pound\",\"foot-pound\"]],\r\n[\"kilocalorie (si)(kcal)\",[\"kcal\",\"kilocalorie\"]],\r\n[\"kilowatt hour\",[\"kw hr\"]],\r\n[\"volt-coulomb (v-cb)\",[\"v cb\",\"v-cb\",\"volt-coulomb\",\"volt coulomb\"]],\r\n[\"watt-hour (w-hr)\",[\"w hr\",\"watt-hour\",\"watt hour\"]],\r\n[\"watt-second (w-sec)\",[\"w sec\",\"watt-second\",\"watt second\"]],\r\n\r\n//force typo\r\n[\"newton (n)\",[\"n\",\"newton\"]],\r\n[\"dyne (dy)\",[\"dyne\",\"dy\"]],\r\n[\"kilogram-force (kgf)\",[\"kilogram force\",\"kgf\"]],\r\n[\"kip (k)\",[\"kip\",\"k\"]],\r\n[\"ounce-force (ozf)\",[\"ounce force\",\"ozf\"]],\r\n[\"pound-force (lbf)\",[\"pound force\",\"lbf\"]],\r\n\r\n//force/length typo\r\n[\"newton/meter (n/m)\",[\"newton/meter\",\"n/m\"]],\r\n[\"pound force/inch(lbf/in)\",[\"pound force/inch\",\"lbf/in\"]],\r\n[\"pound force/foot(lbf/ft)\",[\"pound force/foot\",\"lbf/ft\"]],\r\n//temperature typo:\r\n[\"celsius\",[\"celsius\",\"c°\",\"celcius\"]],\r\n[\"kelvin\",[\"kelvin\",\"k°\"]],\r\n[\"fahrenheit\",[\"f°\"]],\r\n[\"rankine\",[\"r°\"]],\r\n\r\n[\"bushel\",[\"bushel\"]],\r\n//time typo:\r\n[\"second\",[\"sec\"]],\r\n[\"day (sidereal)\",[\"day sideral\"]],\r\n[\"hour (sidereal)\",[\"hour sideral\"]],\r\n[\"minute (sidereal)\",[\"minute sideral\",\"min sideral\"]],\r\n[\"second (sidereal)\",[\"second sidereal\",\"sec sideral\"]],\r\n[\"year (tropical)\",[\"year tropical\"]],\r\n[\"year (sidereal)\",[\"year sidereal\"]]\r\n\r\n]\r\n  )\r\nvar property = [];\r\nvar unit = [];\r\nvar factor = [];\r\n\r\nproperty[0] = \"acceleration\";\r\nunit[0] = new Array(\"meter/sq.sec (m/sec^2)\", \"foot/sq.sec (ft/sec^2)\", \"g (g)\", \"galileo (gal)\", \"inch/sq.sec (in/sec^2)\");\r\nfactor[0] = new Array(1, .3048, 9.806650, .01, 2.54e-02);\r\n\r\nproperty[1] = \"area\";\r\nunit[1] = new Array(\"square meter (m^2)\", \"acre\", \"are\", \"barn\", \"hectare\", \"rood\", \"square centimeter\", \"square kilometer\", \"circular mil\", \"square foot\", \"square inch\", \"square mile\", \"square yard\");\r\nfactor[1] = new Array(1, 4046.856, 100, 1e-28, 10000, 1011.71413184285, .0001, 1000000, 5.067075e-10, 9.290304e-02, 6.4516e-04, 2589988, .8361274);\r\n\r\nproperty[2] = \"torque\";\r\nunit[2] = new Array(\"newton-meter\", \"dyne-centimeter(dy cm)\", \"kgrf-meter (kgf-m)\", \"lbf-inch (lbf-in)\", \"lbf-foot (lbf-ft)\");\r\nfactor[2] = new Array(1, .0000001, 9.806650, .1129848, 1.355818);\r\n\r\nproperty[3] = \"electricity\";\r\nunit[3] = new Array(\"coulomb (cb)\", \"abcoulomb\", \"ampere-hour (a-hr)\", \"faraday (f)\", \"statcoulomb\", \"millifaraday (mf)\", \"microfaraday (mu-f)\", \"picofaraday (pf)\");\r\nfactor[3] = new Array(1, 10, 3600, 96521.8999999997, .000000000333564, 96.5219, 9.65219e-02, 9.65219e-05);\r\n\r\nproperty[4] = \"energy\";\r\nunit[4] = new Array(\"joule (j)\", \"btu (mean)\", \"btu (thermochemical)\", \"calorie (si) (cal)\", \"calorie (mean)(cal)\", \"calorie (thermo)\", \"electron-volt (ev)\", \"erg\", \"foot-pound force\", \"foot poundal\", \"horsepower hour\", \"kilocalorie (si) (kcal)\", \"kilocalorie (mean)(kcal)\", \"kilowatt hour\", \"ton tnt\", \"volt-coulomb (v-cb)\", \"watt-hour (w-hr)\", \"watt-second (w-sec)\");\r\nfactor[4] = new Array(1, 1055.87, 1054.35, 4.1868, 4.19002, 4.184, 1.6021e-19, .0000001, 1.355818, 4.214011e-02, 2684077.3, 4186.8, 4190.02, 3600000, 4.2e9, 1, 3600, 1);\r\n\r\nproperty[5] = \"force\";\r\nunit[5] = new Array(\"newton (n)\", \"dyne (dy)\", \"kilogram-force (kgf)\", \"kilopond-force (kpf)\", \"kip (k)\", \"ounce-force (ozf)\", \"pound-force (lbf)\", \"poundal\");\r\nfactor[5] = new Array(1, .00001, 9.806650, 9.806650, 4448.222, .2780139, .4535924, .138255);\r\n\r\nproperty[6] = \"force / length\";\r\nunit[6] = new Array(\"newton/meter (n/m)\", \"pound force/inch(lbf/in)\", \"pound force/foot(lbf/ft)\");\r\nfactor[6] = new Array(1, 175.1268, 14.5939);\r\n\r\nproperty[7] = \"length\";\r\nunit[7] = new Array(\"meter (m)\", \"angstrom (a')\", \"astronomical unit(au)\", \"caliber (cal)\", \"centimeter (cm)\", \"kilometer (km)\", \"ell\", \"em\", \"fathom\", \"furlong\", \"fermi (fm)\", \"foot (ft)\", \"inch (in)\", \"league (int'l)\", \"league (uk)\", \"light year(ly)\", \"micrometer (mu-m)\", \"mil\", \"millimeter (mm)\", \"nanometer (nm)\", \"mile(int'l nautical)\", \"mile(uk nautical)\", \"mile(us nautical)\", \"mile(us statute)\", \"parsec\", \"pica (printer)\", \"picometer (pm)\", \"point (pt)\", \"rod\", \"yard (yd)\");\r\nfactor[7] = new Array(1, 1e-10, 1.49598e11, .000254, .01, 1000, 1.143, 4.2323e-03, 1.8288, 201.168, 1e-15, .3048, .0254, 5556, 5556, 9.46055e+15, .000001, .0000254, .001, 1e-9, 1852, 1853.184, 1852, 1609.344, 3.08374e+16, 4.217518e-03, 1e-12, .0003514598, 5.0292, .9144);\r\n\r\nproperty[8] = \"light\";\r\nunit[8] = new Array(\"lumen/sq.meter (lu/m^2)\", \"lumen/sq.centimeter\", \"lumen/sq.foot\", \"foot-candle (ft-cdl)\", \"foot-lambert\", \"candela/sq.meter\", \"candela/sq.centimeter\", \"lux (lux)\", \"phot\");\r\nfactor[8] = new Array(1, 10000, 10.76391, 10.76391, 10.76391, 3.14159250538575, 31415.9250538576, 1, 10000);\r\n\r\nproperty[9] = \"mass\";\r\nunit[9] = new Array( \"gram\", \"kilogram (kg)\", \"milligram\", \"microgram (mu-gr)\", \"carat (metric)(ct)\", \"hundredweight (long)\", \"hundredweight (short)\", \"pound\", \"pound mass(troy)\", \"ounce mass(ozm)\", \"ounce mass(troy)\", \"slug\", \"ton (assay)\", \"ton (long)\", \"ton (short)\", \"ton (metric)\", \"tonne\");\r\nfactor[9] = new Array(1, 1000, 1e-3, .000001, .0002, 50.80235, 45.35924, 453.592, .3732417, .02834952, .03110348, 14.5939, .02916667, 1016.047, 907.1847, 1000, 1000);\r\n\r\nproperty[10] = \"mass flow\";\r\nunit[10] = new Array(\"kilogram/second (kgr/sec)\", \"pound mass/sec(lbm/sec)\", \"pound mass/min(lbm/min)\");\r\nfactor[10] = new Array(1, .4535924, .007559873);\r\n\r\nproperty[11] = \"density & mass capacity\";\r\nunit[11] = new Array(\"kilogram/cub.meter\", \"grain/galon\", \"grams/cm^3 (gr/cc)\", \"pound-mass/cubic-foot\", \"pound mass/cubic-inch\", \"ounces/gallon (uk,liq)\", \"ounces/gallon (us,liq)\", \"ounces (mass)/inch\", \"pound-mass/gal (uk,liq)\", \"pound-mass/gal (us,liq)\", \"slug/cubic foot\", \"tons (long,mass)/cub.yard\");\r\nfactor[11] = new Array(1, .01711806, 1000, 16.01846, 27679.91, 6.236027, 7.489152, 1729.994, 99.77644, 119.8264, 515.379, 1328.939);\r\n\r\nproperty[12] = \"power\";\r\nunit[12] = new Array(\"watt (w)\", \"kilowatt\", \"megawatt\", \"milliwatt\", \"btu (si)/hour\", \"btu (thermo)/second\", \"btu (thermo)/minute\", \"btu (thermo)/hour\", \"calorie (thermo)/second\", \"calorie (thermo)/minute\", \"erg/second\", \"foot-pound force/hour\", \"foot-pound force/minute\", \"foot-pound force/second\", \"horsepower(550 ft-lbf/s)\", \"horsepower (electric)\", \"horsepower (boiler)\", \"horsepower (metric)\", \"horsepower (uk)\", \"kilocalorie (thermo)/min\", \"kilocalorie (thermo)/sec\");\r\nfactor[12] = new Array(1, 1000, 1000000, .001, .2930667, 1054.35, 17.5725, .2928751, 4.184, 6.973333e-02, .0000001, .0003766161, .02259697, 1.355818, 745.7, 746, 9809.5, 735.499, 745.7, 69.7333, 4184);\r\n\r\nproperty[13] = \"pressure & stress\";\r\nunit[13] = new Array(\"newton/sq.meter\", \"atmosphere\", \"atmosphere (techinical)\", \"bar\", \"centimeter mercury(cmhg)\", \"centimeter water(4'c)\", \"decibar\", \"kgr force/sq.centimeter\", \"kgr force/sq.meter\", \"kip/square inch\", \"millibar\", \"millimeter mercury(mmhg)\", \"pascal (pa)\", \"kilopascal (kpa)\", \"megapascal (mpa)\", \"poundal/sq.foot\", \"pound-force/sq.foot\", \"pound-force/sq.inch (psi)\", \"torr (mmhg,0'c)\");\r\nfactor[13] = new Array(1, 101325, 98066.5, 100000, 1333.22, 98.0638, 10000, 98066.5, 9.80665, 6894757, 100, 133.3224, 1, 1000, 1000000, 47.88026, 47.88026, 6894.757, 133.322);\r\n\r\n// !!! caution: temperature requires an increment as well as a multiplying factor\r\n// !!! and that's why it's handled differently\r\n// !!! be very careful in how you change this behavior\r\nproperty[14] = \"Temperature\";\r\nunit[14] = new Array(\"celsius\", \"fahrenheit\", \"kelvin\", \"rankine\");\r\nfactor[14] = new Array(1, 0.555555555555, 1, 0.555555555555);\r\nvar tempIncrement = new Array(0, -32, -273.15, -491.67);\r\n\r\nproperty[15] = \"time\";\r\nunit[15] = new Array(\"second\", \"day\", \"day (sidereal)\", \"hour\", \"hour (sidereal)\", \"minute\", \"minute (sidereal)\", \"month\", \"second (sidereal)\", \"year\", \"year (tropical)\", \"year (sidereal)\");\r\nfactor[15] = new Array(1, 8.640e4, 86164.09, 3600, 3590.17, 60, 60, 2628000, .9972696, 31536000, 31556930, 31558150);\r\n\r\nproperty[16] = \"velocity & speed\";\r\nunit[16] = new Array(\"meter/second (m/sec)\", \"foot/minute (ft/min)\", \"foot/second (ft/sec)\", \"kilometer/hour (kph)\", \"knot (int'l)\", \"mile-(us)/hour-(mph)\", \"mile (nautical)/hour\", \"mile (us)/minute\", \"mile (us)/second\", \"speed of light (c)\", \"mach (stp)(a)\");\r\nfactor[16] = new Array(1, 5.08e-03, .3048, .2777778, .5144444, .44707, .514444, 26.8224, 1609.344, 299792458, 340.0068750);\r\n\r\nproperty[17] = \"viscosity\";\r\nunit[17] = new Array(\"newton-second/meter\", \"centipoise\", \"centistoke\", \"sq.foot/second\", \"poise\", \"poundal-second/sq.foot\", \"pound mass/foot-second\", \"pound force-second/sq.foot\", \"rhe\", \"slug/foot-second\", \"stoke\");\r\nfactor[17] = new Array(1, .001, .000001, 9.290304e-02, .1, 1.488164, 1.488164, 47.88026, 10, 47.88026, .0001);\r\n\r\nproperty[18] = \"volume & capacity\";\r\nunit[18] = new Array(\"cubic meter (m^3)\", \"cubic centimeter\", \"cubic millimeter\", \"acre foot\", \"barrel (oil)\", \"board foot\", \"bushel\", \"cup\", \"fluid ounce (us)\", \"cubic foot\", \"gallon (uk)\", \"gallon (us,dry)\", \"gallon (us,liq)\", \"gill (uk)\", \"gill (us)\", \"cubic inch (in^3)\", \"liter\", \"milliliter\", \"liter (old)\", \"ounce (uk,fluid)\", \"ounce (us,fluid)\", \"peck (us)\", \"pint (us,dry)\", \"pint (us,liq)\", \"quart (us,dry)\", \"quart (us,liq)\", \"stere\", \"tablespoon\", \"teaspoon\", \"ton (register)\", \"cubic yard\");\r\nfactor[18] = new Array(1, .000001, .000000001, 1233.482, .1589873, .002359737, .03523907, .0002365882, .00002957353, .02831685, .004546087, .004404884, .003785412, .0001420652, .0001182941, .00001638706, .001, .000001, .001000028, .00002841305, .00002957353, 8.8097680e-03, .0005506105, 4.7317650e-04, .001101221, 9.46353e-04, 1, .00001478676, .000004928922, 2.831685, .7645549);\r\n\r\nproperty[19] = \"volume flow\";\r\nunit[19] = new Array(\"cubic meter/second\", \"cubic foot/second\", \"cubic foot/minute\", \"cubic inches/minute\", \"gallons (us,liq)/minute)\");\r\nfactor[19] = new Array(1, .02831685, .0004719474, 2.731177e-7, 6.309020e-05);\r\n\r\n// ===========\r\n//  Functions\r\n// ===========\r\n// this function is used to return the correct unit if a typo occurred\r\n// the correct unit is the key of the unit_typo map\r\n\r\nexport function getByValue(map, searchValue) {\r\n  for (let [key, value] of map.entries()) {\r\n    if (value.indexOf(searchValue)>-1)\r\n      return key;\r\n  }\r\n  return -1;\r\n}\r\n// search for the unity in arrays\r\nexport function searchListGlobal(firstItem)\r\n{\r\n  var res = [];\r\n  var i=0;\r\n  var j;\r\n  console.log('firstItem ',firstItem)\r\n  var [row,col]=searchIn(firstItem)\r\n    for(j=0;j<unit[row].length;j++)\r\n    { \r\n        if(unit[row][j]!=firstItem)\r\n        res.push(unit[row][j]);\r\n    }\r\n  return res;\r\n}\r\nexport function searchList(firstItem,word){\r\n// adding a bool var to know if the function is triggered from the onChange input function or from onSelect function\r\n\r\n  var res = [];\r\n  var i=0;\r\n  var j;\r\n  if(firstItem)\r\n  {\r\n\r\n    var [row,col]=searchIn(firstItem)\r\n    for(j=0;j<unit[row].length;j++)\r\n    { \r\n      if(unit[row][j].match(new RegExp(word, 'gi')))\r\n        res.push(unit[row][j]);\r\n    }\r\n  }\r\n  else\r\n  for(;i<20;i++)\r\n    for(j=0;j<unit[i].length;j++)\r\n    { \r\n      if(unit[i][j].match(new RegExp(word, 'gi')))\r\n        res.push(unit[i][j]);\r\n    }\r\n  return res;\r\n  \r\n}\r\n\r\n// this function returns the index of a given unit in the units array (typos included in the given unit)\r\nexport function searchIn(name)\r\n{ \r\n  \r\n  if(name){\r\n \r\n    if(name.length>=4)\r\n    {\r\n    name = name.replace(/s$/gi, \"\");\r\n    }\r\n   // the two lines below could be deleted because this function could search in the units array directly\r\n    if(getByValue(unit_typo,name)!==-1)\r\n      name = getByValue(unit_typo,name).toLowerCase();\r\n    const row = unit.findIndex(row => row.includes(name.toLowerCase()));\r\n    if(row>-1){\r\n      const col = unit[row].indexOf(name.toLowerCase());\r\n      return [row,col];\r\n    }\r\n     \r\n     return [null,null];\r\n  }\r\n  \r\n}\r\n// the function below reorder the position of clickable items in the list\r\nexport function reorderListItems(array,word)\r\n{ \r\n  var i=0;\r\n  for (; i < array.length; i++) {\r\n        if (array[i].match(new RegExp('\\\\('+word+'\\\\)', 'gi'))) {\r\n           array.splice(0, 0, array.splice(i, 1)[0]);\r\n        }\r\n        else if((array[i].match(new RegExp('^'+word, 'gi')))&&(array[i].length-(Math.abs(array[i].lastIndexOf(\")\"))-Math.abs(array[i].indexOf(\"(\")))<array[0].length-(Math.abs(array[0].lastIndexOf(\")\"))-Math.abs(array[0].indexOf(\"(\"))))) {\r\n           array.splice(0, 0, array.splice(i, 1)[0]);\r\n        }\r\n  }\r\n  i=0;\r\n  for (; i < array.length; i++) {\r\n        if (array[i].match(new RegExp('\\\\s\\\\('+word+'\\\\)', 'gi'))) {\r\n           array.splice(0, 0, array.splice(i, 1)[0]);\r\n        }\r\n        \r\n        \r\n  }\r\n  return array;\r\n\r\n}\r\n\r\nexport function evaluateRegex(input){\r\n  var array = input.toString().trim().split(/\\s+/);\r\n  var source_unit_input=null;\r\n  var source_unit_menu=null;\r\n  var target_unit_menu=null;\r\n  var i = 0;\r\n  // for checking for 'convert' word with its typo \r\n    for (; i < array.length; i++) {\r\n        if (array[i].match(/convert.{0,4}/gi)) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n    // for checking for the digits to convert\r\n    i = 0;\r\n    for (; i < array.length; i++) {\r\n\r\n        if (array[i].match(/^[+-]?\\d+(\\.\\d+)?$/)&&(!source_unit_input)) {\r\n          source_unit_input = array[i];\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n    // finding the into,to,from words in the input string\r\n     i = 0;\r\n    for (; i < array.length; i++) {\r\n\r\n        if (array[i].match(/into|to|from/gi)) {\r\n          if(i!=0){\r\n          var array1 = array.splice(i+1,array.length-1);\r\n          target_unit_menu = array1.join(' ');\r\n          var array2 = array.splice(0,i); \r\n          source_unit_menu = array2.join(' ');\r\n          }\r\n          else{\r\n            //\r\n          }\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n\r\n   \r\n\r\nif(source_unit_input&&source_unit_menu&&target_unit_menu)\r\n{\r\n\r\n return CalculateUnit(source_unit_input,source_unit_menu,target_unit_menu)\r\n\r\n}\r\nelse if(!source_unit_input&&source_unit_menu&&target_unit_menu)\r\nreturn(CalculateUnit(1,source_unit_menu,target_unit_menu)+'- Enter how many '+source_unit_menu+' you want to convert')\r\n  \r\n\r\n}\r\n\r\nexport function CalculateUnit(source_unit_input,source_unit_menu,target_unit_menu) {\r\n  // A simple wrapper function to validate input before making the conversion\r\n\r\n  var sourceValue = source_unit_input;\r\n  // First check if the user has given numbers or anything that can be made to one...\r\n  sourceValue = parseFloat(sourceValue);\r\n  if (!isNaN(sourceValue) || sourceValue == 0) {\r\n    // If we can make a valid floating-point number, convert\r\n    return ConvertFromTo(sourceValue, source_unit_menu,target_unit_menu);\r\n  }\r\n}\r\n\r\nexport function ConvertFromTo(sourceValue, source_unit_menu,target_unit_menu) {\r\n  // Converts the contents of the sourceForm input box to the units specified in the targetForm unit menu and puts the result in the targetForm input box.In other words, this is the heart of the whole script...\r\n  var propIndex;\r\n  var sourceIndex;\r\n  var sourceFactor;\r\n  var targetIndex;\r\n  var targetFactor;\r\n  var result;\r\n\r\n\r\n\r\n\r\n  //  determine what unit are we converting FROM (i.e. source) and the factor needed to convert that unit to the base unit.\r\n  [propIndex,sourceIndex] = searchIn(source_unit_menu);\r\n  \r\n  if(( sourceIndex != null)&&( propIndex != null))\r\n  {\r\n  sourceFactor = factor[propIndex][sourceIndex];\r\n  // doing the same thing for the target unit - the units we are converting TO:\r\n  if(target_unit_menu.length>=4)\r\n    {\r\n    target_unit_menu = target_unit_menu.replace(/s$/gi, \"\");\r\n    }\r\n  if(getByValue(unit_typo,target_unit_menu)!=-1)\r\n  target_unit_menu = getByValue(unit_typo,target_unit_menu).toLowerCase();\r\n  targetIndex = unit[propIndex].findIndex(row => row.includes(target_unit_menu.toLowerCase()));\r\n  if (targetIndex==-1) \r\n      return 'Check second unit typo!';\r\n  targetFactor = factor[propIndex][targetIndex];\r\n\r\n  // convert the source TO the base unit: (The input has been checked by the CalculateUnit function).\r\n\r\n  result = sourceValue;\r\n  // Handle Temperature increments!\r\n  if (property[propIndex] == \"Temperature\") {\r\n    result = parseFloat(result) + tempIncrement[sourceIndex];\r\n  }\r\n  result = result * sourceFactor;\r\n\r\n  // use the targetFactor to convert FROM the base unit\r\n  // to the target unit...\r\n  result = result / targetFactor;\r\n  // Again, handle Temperature increments!\r\n  if (property[propIndex] == \"Temperature\") {\r\n    result = parseFloat(result) - tempIncrement[targetIndex];\r\n  }\r\n\r\n  \r\n\r\n  return(sourceValue+' '+unit[propIndex][sourceIndex]+ ' = '+ result +' '+unit[propIndex][targetIndex]+' !');  \r\n  }\r\n  else\r\n    return('Check the first unit typo!')\r\n  \r\n}\r\n","import React from 'react';\nimport * as unit from './unit-converter.js'\nexport default class App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.dataInput = React.createRef();\n      this.state = {\n    inputText: '',\n    converted:'',\n    list:[]\n  }\n  \n    }\n\n  onChangeInput = (e) =>{\n    \n    this.setState({inputText:e.target.value});\n     var array = e.target.value.toString().trim().split(/\\s+/);\n     var source_unit_input=null;\n     var source_unit_menu=null;\n     var target_unit_menu=null;\n     var array1 = [];\n     var array2 = [];\n     var i   = 0;\n      // for checking for 'convert' word with its typo \n      for (; i < array.length; i++) {\n        if (array[i].match(/conver.{0,4}/gi)) {\n            array.splice(i, 1);\n        }\n      }\n      // for checking for the digits to convert\n      i = 0;\n      for (; i < array.length; i++) {\n\n          if (array[i].match(/^[+-]?\\d+(\\.\\d+)?$/)&&(!source_unit_input)) {\n            source_unit_input = array[i];\n              array.splice(i, 1);\n          }\n      }\n        i = 0;\n        for (; i < array.length; i++) {\n\n            if (array[i].match(/into|to|from/gi)) {\n              if(i!=0){\n              array1 = array.splice(i+1,array.length-1);\n              target_unit_menu = array1.join(' ');\n              array2 = array.splice(0,i); \n              source_unit_menu = array2.join(' ');\n              }\n              else{\n                \n              }\n                array.splice(i, 1);\n            }\n        }\n       \n       \n    var listArray\n    if(target_unit_menu)\n    var listArray = unit.searchList(source_unit_menu,target_unit_menu);\n    else if ((array[array.length-1]==='to')||((array.length>1)&&(array[array.length-1]==='t')))\n      listArray = unit.searchListGlobal(source_unit_menu);\n    else  listArray = unit.searchList(source_unit_menu,array[array.length-1]);\n    if (!target_unit_menu)\n    {\n    var array = e.target.value.toString().trim().split(/\\s+/);\n    listArray = unit.reorderListItems(listArray,array[array.length-1]);  \n    }\n    \n    else listArray = unit.reorderListItems(listArray,target_unit_menu);\n    this.setState({list:listArray});\n    \n  }\n  // when choosing an option from the list\n  onClickItem = (e) => {\n    // getting the input text in an array to add the new item selected to it \n    var inputArray = this.state.inputText.toString().trim().split(/\\s+/);\n    if(inputArray.indexOf('to')!=-1)\n    {\n      var toIndex = inputArray.indexOf('to');\n      inputArray = inputArray.slice(0,toIndex+1);\n    }\n    if(inputArray[inputArray.length-1]!='to')\n    { var listArray;\n      var l = inputArray.pop();\n\n      listArray = unit.searchListGlobal(e.target.innerText);\n      this.setState({list:listArray});\n    }\n    // add the selected unit to the array created\n    inputArray.push(e.target.innerText);\n\n\n    if ((!this.state.inputText.match(/\\sto\\s/gi))&&(inputArray[inputArray.length-2]!='to'))\n    inputArray.push('to ')\n    this.setState({inputText:inputArray.join(' ')})\n    this.dataInput.current.focus();\n    // cal the function that setts the list here \n \n  }\n  //the function that shows the result\n  checkMultipleResult(){\n\n    var result = unit.evaluateRegex(this.state.inputText);\n    if (result){\n      \n      if (result.match(/=/gi))\n      {\n        var array = result.trim().split(/\\s+/)\n        var index = array.indexOf(\"=\");\n        var first = array.slice(0,index +1).join(' ')\n        var last = array.slice(index +2,array.length).join(' ')\n        var value = array[index+1];\n\n        return <div>{first}<span style={{fontSize:\"20px\"}} > {value} </span>{last}</div>\n      }\n\n        \n        \n\n      \n        \n      \n      else return result;\n    }\n    \n  }\n  clearInput(e){\n    e.preventDefault();\n    this.setState({inputText:''})\n  }\n  render() {\n      return (\n          <>\n         <span style={{\n          position: 'relative',\n          display:'inline-block',\n          width:'100%'\n          }}>\n          <input ref={this.dataInput} placeholder=\"Type: 3 inch to meters\" className=\"converter-select form-control\" value={this.state.inputText} onChange={(e) => this.onChangeInput(e)} type=\"text\"  dataPlaceholder=\"Type PDF, Word, Currency...\"/><i onClick={(e)=> this.clearInput(e)} style={{\"position\":\"absolute\",\"right\":\"0\",\"top\":\"0\",\"padding\":\"0 8px\",\"fontStyle\":\"normal\",\"fontSize\":\"1.5em\",color:\"white\",backgroundColor:\"#BBC0C4\",\"userSelect\":\"none\",\"cursor\":\"pointer\"}}>&times;</i>\n         </span>\n         \n               {this.state.inputText ? <>\n                 <div style={{borderRadius: \"20px\",padding:\"20px\",fontWeight:\"bold\",margin:\"auto\",backgroundColor:\"#0078D7\",borderStyle:\"dotted\",borderWidth:\"3px\",borderColor:\"white\",color: \"#fff\",marginTop:\"10px\"}}>\n                {this.checkMultipleResult(this.state.inputText)} </div>\n                <div style={{backgroundColor:\"white\",borderRadius: \"20px\",marginTop:\"1em\"}}>\n                    \n                        {this.state.list.map(item => (\n                          <li type=\"button\" style={{\n                              backgroundColor: \"#0078D7\",\n                              borderRadius:\"10px\",\n                              border: \"none\",\n                              color: \"white\",\n                              padding: \"5px 25px\",\n                              textAlign: \"center\",\n                              textDecoration: \"none\",\n                              display: \"inline-block\",\n                              fontSize: \"16px\",\n                              margin: \"4px 2px\",\n                              cursor: \"pointer\",\n                          }} onClick={(e)=> this.onClickItem(e) } key={item}>{item}</li>\n                        ))}\n                    \n                </div>\n                </>\n                  : <div style={{borderRadius: \"20px\",padding:\"20px\",margin:\"auto\",fontWeight:\"bold\",backgroundColor:\"#0078D7\",borderStyle:\"dotted\",borderWidth:\"3px\",borderColor:\"white\",color: \"#fff\",marginTop:\"10px\"}}><div style={{color: \"#fff\",fontWeight:\"bold\"}}>Start typing! Try something like:</div>2 km to m</div>}\n         \n          </>\n      )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}